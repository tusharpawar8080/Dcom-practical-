disp("channel matrix");
CM=[0.9 0.1;0.2 0.8]
p_x1=0.5
p_x2=0.5
disp("Output Probability");
p_y1=p_x1*CM(1,1) + p_x2*CM(2,1)
p_y2=p_x1*CM(1,2) + p_x2*CM(2,2)
disp("Input Probability");
p_x=[p_x1 p_x2]     %input probability
p_y=[p_y1 p_y2]     %output probability
disp("Input Entropy");
h_x=-p_x1*log2(p_x1)-(p_x2*log2(p_x2)) 
disp("Output Entropy");
h_y=-p_y1*log2(p_y1)-(p_y2*log2(p_y2))  
pxbyy=p_x.*CM   %conditional probability
H_xy=[-pxbyy(1,1)*(log2(pxbyy(1,1)))]-[pxbyy(1,2)*(log2(pxbyy(1,2)))]-[pxbyy(2,1)*(log2(pxbyy(2,1)))]-[pxbyy(2,2)*(log2(pxbyy(2,2)))]  
H_xbyy=H_xy-h_y     %conditional entropy
H_ybyx=H_xy-h_x     %conditional entropy
disp("Mutual Information");
I_xy=h_x-H_xbyy



%(use octave prepare define,formulae (check files theory section))
